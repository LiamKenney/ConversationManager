{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liamp\\\\Projects\\\\coding_challenges\\\\remesh\\\\app\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Conversation from \"./components/Conversation\";\nimport convServices from \"./services/conversationServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.search = event => {\n      const {\n        value\n      } = event.target;\n\n      if (value) {\n        convServices.searchByTitle(this.state.search).then(convos => {\n          const elements = this.conversationMapper(convos);\n          this.setState({\n            search: value,\n            conversations: elements\n          });\n        });\n      } else {\n        convServices.selectAll().then(convos => {\n          this.setState(prevState => ({\n            conversations: this.conversationMapper(convos)\n          }));\n        });\n      }\n    };\n\n    this.createConvo = () => {\n      const data = {\n        title: this.state.input\n      };\n      convServices.create(data).then(() => {\n        const newConvo = this.conversationMapper([data]);\n        this.setState(prevState => ({\n          conversations: prevState.conversations.concat(newConvo),\n          input: \"\"\n        }));\n      }).catch(err => console.error(err));\n    };\n\n    this.handleInputChange = event => {\n      this.setState(prevState => ({\n        input: event.target.value\n      }));\n    };\n\n    this.state = {\n      input: \"\",\n      conversations: []\n    };\n  }\n\n  conversationMapper(convos) {\n    return convos.map(convo => /*#__PURE__*/_jsxDEV(Conversation, {\n      data: convo\n    }, convo.Id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this));\n  }\n\n  componentDidMount() {\n    convServices.selectAll().then(convos => {\n      this.setState(prevState => ({\n        conversations: this.conversationMapper(convos)\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search\",\n        onChange: this.search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.conversations || null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-text\",\n            value: this.state.input,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create button\",\n            onClick: this.createConvo,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/liamp/Projects/coding_challenges/remesh/app/src/App.jsx"],"names":["React","Conversation","convServices","App","Component","constructor","props","search","event","value","target","searchByTitle","state","then","convos","elements","conversationMapper","setState","conversations","selectAll","prevState","createConvo","data","title","input","create","newConvo","concat","catch","err","console","error","handleInputChange","map","convo","Id","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Conversation from \"./components/Conversation\";\nimport convServices from \"./services/conversationServices\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      conversations: [],\n    }\n  }\n\n  search = (event) => {\n    const { value } = event.target;\n    if (value) {\n      convServices.searchByTitle(this.state.search).then(convos => {\n        const elements = this.conversationMapper(convos);\n        this.setState({\n          search: value,\n          conversations: elements\n        });\n      })\n    } else {\n      \n    convServices.selectAll().then(convos => {\n      this.setState(prevState => ({ conversations: this.conversationMapper(convos) }));\n    })\n    }\n  }\n\n  createConvo = () => {\n    const data = {\n      title: this.state.input\n    }\n    convServices.create(data).then(() => {\n      const newConvo = this.conversationMapper([data]);\n      this.setState(prevState => ({\n        conversations: prevState.conversations.concat(newConvo),\n        input: \"\",\n      }))\n    }).catch(err => console.error(err))\n  }\n\n  handleInputChange = (event) => {\n    this.setState(prevState => ({\n      input: event.target.value\n    }))\n  }\n\n  conversationMapper(convos) {\n    return convos.map(convo => <Conversation key={convo.Id} data={convo} />)\n  }\n\n  componentDidMount() {\n    convServices.selectAll().then(convos => {\n      this.setState(prevState => ({ conversations: this.conversationMapper(convos) }));\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <input type=\"text\" className=\"search\" onChange={this.search} />\n        <div className=\"container\">\n          {this.state.conversations || null}\n          <div className=\"button-container\">\n            <input className=\"new-text\" value={this.state.input} onChange={this.handleInputChange} />\n            <div className=\"create button\" onClick={this.createConvo}>Create</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}