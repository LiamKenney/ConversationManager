[{"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\index.js":"1","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\reportWebVitals.js":"2","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\App.jsx":"3","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\services\\conversationServices.js":"4","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\components\\Conversation.jsx":"5","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\services\\messageServices.js":"6","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\components\\Message.jsx":"7","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\services\\thoughtServices.js":"8","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\components\\Thought.jsx":"9"},{"size":547,"mtime":1612763833151,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612710679203,"results":"12","hashOfConfig":"11"},{"size":2057,"mtime":1612787592948,"results":"13","hashOfConfig":"11"},{"size":2212,"mtime":1612783892783,"results":"14","hashOfConfig":"11"},{"size":2851,"mtime":1612782577292,"results":"15","hashOfConfig":"11"},{"size":2188,"mtime":1612784061181,"results":"16","hashOfConfig":"11"},{"size":2903,"mtime":1612782701296,"results":"17","hashOfConfig":"11"},{"size":2178,"mtime":1612781045029,"results":"18","hashOfConfig":"11"},{"size":632,"mtime":1612782714690,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1f7ldc6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\index.js",[],["41","42"],"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\reportWebVitals.js",[],"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\App.jsx",[],"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\services\\conversationServices.js",[],"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\components\\Conversation.jsx",[],"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\services\\messageServices.js",["43"],"import axios from \"axios\";\r\n\r\nconst cAxios = axios.create({\r\n  baseURL: `http://localhost:8080/messages/`,\r\n});\r\n\r\nconst globalHandler = (config) => {\r\n  return cAxios(config).then(handleSuccess).catch(handleError);\r\n};\r\n\r\nconst handleSuccess = (res) => {\r\n  if (res.data) {\r\n    res.data = res.data.map((datum) => {\r\n        let newDatum = {};\r\n      if (datum[\"DateCreated\"]) {\r\n        datum[\"DateCreated\"] = new Date(datum[\"DateCreated\"]).toLocaleString();\r\n      }\r\n      if (datum[\"DateModified\"]) {\r\n        datum[\"DateModified\"] = new Date(datum[\"DateModified\"]).toLocaleString();\r\n      }\r\n      for (let key in datum) {\r\n          const newKey = key[0].toLowerCase() + key.slice(1);\r\n          newDatum[newKey] = datum[key];\r\n      }\r\n      return newDatum;\r\n    });\r\n  }\r\n  return res.data;\r\n};\r\n\r\nconst handleError = (err) => {\r\n  return Promise.reject(err);\r\n};\r\n\r\nconst create = (data) => {\r\n  const config = {\r\n    url: \"create\",\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data,\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectAll = () => {\r\n  const config = {\r\n    url: \"\",\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectById = (id) => {\r\n  const config = {\r\n    url: `${id}`,\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectByConversationId = (cid) => {\r\n  const config = {\r\n    url: \"\",\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    params: { cid },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  const config = {\r\n    url: `${id}/update`,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data,\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const config = {\r\n    url: `${id}/delete`,\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nexport default {\r\n  create,\r\n  selectAll,\r\n  selectById,\r\n  selectByConversationId,\r\n  update,\r\n  remove,\r\n};\r\n","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\components\\Message.jsx",[],"C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\services\\thoughtServices.js",["44"],"import axios from \"axios\";\r\n\r\nconst cAxios = axios.create({\r\n  baseURL: `http://localhost:8080/thoughts/`,\r\n});\r\n\r\nconst globalHandler = (config) => {\r\n  return cAxios(config).then(handleSuccess).catch(handleError);\r\n};\r\n\r\nconst handleSuccess = (res) => {\r\n  if (res.data) {\r\n    res.data = res.data.map((datum) => {\r\n        let newDatum = {};\r\n      if (datum[\"DateCreated\"]) {\r\n        datum[\"DateCreated\"] = new Date(datum[\"DateCreated\"]).toLocaleString();\r\n      }\r\n      if (datum[\"DateModified\"]) {\r\n        datum[\"DateModified\"] = new Date(datum[\"DateModified\"]).toLocaleString();\r\n      }\r\n      for (let key in datum) {\r\n          const newKey = key[0].toLowerCase() + key.slice(1);\r\n          newDatum[newKey] = datum[key];\r\n      }\r\n      return newDatum;\r\n    });\r\n  }\r\n  return res.data;\r\n};\r\n\r\nconst handleError = (err) => {\r\n  return Promise.reject(err);\r\n};\r\n\r\nconst create = (data) => {\r\n  const config = {\r\n    url: \"create\",\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data,\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectAll = () => {\r\n  const config = {\r\n    url: \"\",\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectById = (id) => {\r\n  const config = {\r\n    url: `${id}`,\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectByMessageId = (mid) => {\r\n  const config = {\r\n    url: \"\",\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    params: { mid },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  const config = {\r\n    url: `${id}/update`,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data,\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const config = {\r\n    url: `${id}/delete`,\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nexport default {\r\n  create,\r\n  selectAll,\r\n  selectById,\r\n  selectByMessageId,\r\n  update,\r\n  remove,\r\n};\r\n","C:\\Users\\liamp\\Projects\\coding_challenges\\remesh\\app\\src\\components\\Thought.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":98,"column":1,"nodeType":"51","endLine":105,"endColumn":3},{"ruleId":"49","severity":1,"message":"50","line":98,"column":1,"nodeType":"51","endLine":105,"endColumn":3},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]