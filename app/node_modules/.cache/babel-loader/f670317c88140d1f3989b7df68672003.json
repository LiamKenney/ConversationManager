{"ast":null,"code":"import axios from \"axios\";\nconst cAxios = axios.create({\n  baseURL: `http://localhost:8080/messages/`\n});\n\nconst globalHandler = config => {\n  return cAxios(config).then(handleSuccess).catch(handleError);\n};\n\nconst handleSuccess = res => {\n  if (res.data) {\n    res.data = res.data.map(datum => {\n      let newDatum = {};\n\n      if (datum[\"DateCreated\"]) {\n        datum[\"DateCreated\"] = new Date(datum[\"DateCreated\"]).toLocaleString();\n      }\n\n      if (datum[\"DateModified\"]) {\n        datum[\"DateModified\"] = new Date(datum[\"DateModified\"]).toLocaleString();\n      }\n\n      for (let key in datum) {\n        const newKey = key[0].toLowerCase() + key.slice(1);\n        newDatum[newKey] = datum[key];\n      }\n\n      return newDatum;\n    });\n  }\n\n  return res.data;\n};\n\nconst handleError = err => {\n  return Promise.reject(err);\n};\n\nconst create = data => {\n  const config = {\n    url: \"create\",\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data\n  };\n  return globalHandler(config);\n};\n\nconst selectAll = () => {\n  const config = {\n    url: \"\",\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return globalHandler(config);\n};\n\nconst selectById = id => {\n  const config = {\n    url: `${id}`,\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return globalHandler(config);\n};\n\nconst selectByConversationId = cid => {\n  const config = {\n    url: \"\",\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    params: {\n      cid\n    }\n  };\n  return globalHandler(config);\n};\n\nconst update = (id, data) => {\n  const config = {\n    url: `${id}/update`,\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data\n  };\n  return globalHandler(config);\n};\n\nconst remove = id => {\n  const config = {\n    url: `${id}/delete`,\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return globalHandler(config);\n};\n\nexport default {\n  create,\n  selectAll,\n  selectById,\n  selectByConversationId,\n  update,\n  remove\n};","map":{"version":3,"sources":["C:/Users/liamp/Projects/coding_challenges/remesh/app/src/services/messageServices.js"],"names":["axios","cAxios","create","baseURL","globalHandler","config","then","handleSuccess","catch","handleError","res","data","map","datum","newDatum","Date","toLocaleString","key","newKey","toLowerCase","slice","err","Promise","reject","url","method","headers","selectAll","selectById","id","selectByConversationId","cid","params","update","remove"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst cAxios = axios.create({\r\n  baseURL: `http://localhost:8080/messages/`,\r\n});\r\n\r\nconst globalHandler = (config) => {\r\n  return cAxios(config).then(handleSuccess).catch(handleError);\r\n};\r\n\r\nconst handleSuccess = (res) => {\r\n  if (res.data) {\r\n    res.data = res.data.map((datum) => {\r\n        let newDatum = {};\r\n      if (datum[\"DateCreated\"]) {\r\n        datum[\"DateCreated\"] = new Date(datum[\"DateCreated\"]).toLocaleString();\r\n      }\r\n      if (datum[\"DateModified\"]) {\r\n        datum[\"DateModified\"] = new Date(datum[\"DateModified\"]).toLocaleString();\r\n      }\r\n      for (let key in datum) {\r\n          const newKey = key[0].toLowerCase() + key.slice(1);\r\n          newDatum[newKey] = datum[key];\r\n      }\r\n      return newDatum;\r\n    });\r\n  }\r\n  return res.data;\r\n};\r\n\r\nconst handleError = (err) => {\r\n  return Promise.reject(err);\r\n};\r\n\r\nconst create = (data) => {\r\n  const config = {\r\n    url: \"create\",\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data,\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectAll = () => {\r\n  const config = {\r\n    url: \"\",\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectById = (id) => {\r\n  const config = {\r\n    url: `${id}`,\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst selectByConversationId = (cid) => {\r\n  const config = {\r\n    url: \"\",\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    params: { cid },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  const config = {\r\n    url: `${id}/update`,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data,\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const config = {\r\n    url: `${id}/delete`,\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n\r\n  return globalHandler(config);\r\n};\r\n\r\nexport default {\r\n  create,\r\n  selectAll,\r\n  selectById,\r\n  selectByConversationId,\r\n  update,\r\n  remove,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}